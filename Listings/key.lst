C51 COMPILER V9.60.0.0   KEY                                                               05/10/2022 23:39:21 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Objects\key.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\driver\key.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\src;.\src\app;.\src\d
                    -river;.\src\include) DEBUG OBJECTEXTEND PRINT(.\Listings\key.lst) OBJECT(.\Objects\key.obj)

line level    source

   1          #include "key.h"
   2          
   3          
   4          
   5          static void delay10ms(void)   //误差 0us
   6          {
   7   1          unsigned char a,b,c;
   8   1          for(c=5;c>0;c--)
   9   1              for(b=4;b>0;b--)
  10   1                  for(a=248;a>0;a--);
  11   1      }
  12          
  13          // 调用该函数后会去进行按键扫描，如果没有人按按键则返回0，如果有人按按键
  14          // 则返回按下按键的键值
  15          unsigned char GetKey(void)
  16          {
  17   1              unsigned char hang = 0, lie = 0;
  18   1              unsigned char keyvalue = 0;
  19   1      
  20   1               // 第1回合第1步
  21   1               KEY = 0x0f;                            // 从IO口输出，写IO口
  22   1               if (KEY != 0x0f)                       // 从IO口输入，读IO口
  23   1               {
  24   2                       // 读出的不是0x0f说明有按键被按下
  25   2                       // 第1回合第2步：读出端口从读出值来判断是哪一行
  26   2                       
  27   2                       delay10ms();
  28   2                       // 第一回合中算出行号
  29   2                       switch (KEY)
  30   2                       {
  31   3                              case 0x0e:      hang = 1;       break;
  32   3                              case 0x0d:      hang = 2;       break;
  33   3                              case 0x0b:      hang = 3;       break;
  34   3                              case 0x07:      hang = 4;       break;
  35   3                              default:                                break;
  36   3                       }
  37   2      
  38   2                       // 第2回合第1步
  39   2                       KEY = 0xf0;
  40   2                       if (KEY != 0xf0)
  41   2                       {
  42   3                                switch (KEY)
  43   3                               {
  44   4                                      case 0xe0:      lie = 1;        break;
  45   4                                      case 0xd0:      lie = 2;        break;
  46   4                                      case 0xb0:      lie = 3;        break;
  47   4                                      case 0x70:      lie = 4;        break;
  48   4                                      default:                                break;
  49   4                               }
  50   3      
  51   3                              // 经过2个回合后hang和lie都知道了，然后根据hang和lie去计算键值即可
  52   3                              keyvalue = (hang - 1) * 4 + lie;
  53   3      
  54   3                              return keyvalue;
C51 COMPILER V9.60.0.0   KEY                                                               05/10/2022 23:39:21 PAGE 2   

  55   3                       }
  56   2               }
  57   1      
  58   1               return 0;
  59   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    165    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
